section.glass.heading
  h1 Extensibility

section
  .content
    :markdown
      Whether you want to build a plugin or hack on Interlock directly, this is the place to start.  A few things first.

      **Interlock is built on pluggable functions.**  These pluggables are written like pure functions, taking inputs, delegating certain computations to other functions (often pluggables), and returning an output.  Through its plugin system, Interlock allows you to override or transform the behavior and output of any of the pluggables that are defined.

      **The tool below is a visual representation of the entire compilation process.**  Each visual arc corresponds with a step of compilation, a pluggable.  Arcs closer to the center point are higher-level calculations, and are composed of the adjacent arcs the next level out.  Arcs on the outside have no pluggable dependencies.

      As you hover over arcs, the name of the pluggable will be displayed below.  **If you click on an arc, the visualization will zoom in** and give you detailed information about that compilation step.  To navigate back up the call stack, click the semi-circle at the center of the graph.

      **If you already know what you'd like to override, scroll down to [Writing a Plugin](#writing-a-plugin).**

section.glass.interactive
  .interactive-docs
    .visualization

section.interactive
  .interactive-docs
    .status-bar-wrapper
      div
        span.ion-arrow-left-c &nbsp;
        span Start of Computation
      .status &nbsp;
      div
        span End of computation&nbsp;
        span.ion-arrow-right-c
    .doc-wrapper
      .doc

script(src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js")
script(src="https://cdnjs.cloudflare.com/ajax/libs/markdown-it/4.4.0/markdown-it.js")
script(src="/docs/js/interactive-docs-visualization.js")
